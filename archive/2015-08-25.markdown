---
title: 20150825
layout: outline
---

Today, in 1916, the United States National Park Service is created.

## All

### Warm Up (8:30 - 9:00)

Isaac and Albert were excitedly describing the result of the Third Annual International Science Fair Extravaganza in Sweden. There were three contestants, Louis, Rene, and Johannes. Isaac reported that Louis won the fair, while Rene came in second. Albert, on the other hand, reported that Johannes won the fair, while Louis came in second.

In fact, neither Isaac nor Albert had given a correct report of the results of the science fair. Each of them had given one correct statement and one false statement. What was the actual placing of the three contestants?


## 1503

### Homework Recap (9:00 - 9:30)

Kick the morning off right with some homework recap with Horace in Classroom C.

### Functions in Javascript and Organizing JS Code (9:30 - 12:00)

Join Horace in Classroom C to talk about [functions in Javascript](https://github.com/turingschool/lesson_plans/blob/master/ruby_04-apis_and_scalability/six_rules_for_js_functions.markdown).

### Work Time (1:00 - 4:00)

Work on your thing that you should be working on.


## 1505

### Understanding Multi-Tenancy (9:00 - 11:00)

In this lesson, you will learn how to modify a Rails app to accept multiple stores, or tenants.

Before the class, please clone the lesson repo using the following command:

```
git clone https://github.com/turingschool-examples/storedom.git understanding_multitenancy
```

Make sure you bundle the gems, and prepare the database with `rake db:setup`.

The materials for this lesson are the following:

* [Notes](https://www.dropbox.com/s/kpm2ddj6k08hzrk/Turing%20-%20Understanding%20Multitenancy%20%28Notes%29.pages?dl=0)
* [Lesson Plan](https://github.com/turingschool/lesson_plans/blob/master/ruby_03-professional_rails_applications/understanding_multitenancy.markdown)
* [Video](https://vimeo.com/137402841)

Meet Jorge in Classroom B.

### Seeding Data Efficiently (11:00 - 12:00)

Learn how to seed data programmatically instead of copying and pasting lines of code.

Before the class, please clone the lesson repo using the following command:

```
git clone -b seeding_data https://github.com/turingschool-examples/storedom.git seeding_data
```

Make sure you bundle the gems, and prepare the database with `rake db:setup`.

The materials for this lesson are the following:

* [Notes](https://www.dropbox.com/s/6ymjnizj2no2wm3/Turing%20-%20Seeding%20Data%20Efficiently%20%28Notes%29.pages?dl=0)
* [Lesson Plan](https://github.com/turingschool/lesson_plans/blob/master/ruby_03-professional_rails_applications/seeding_data_efficiently.markdown)
* The video will be posted after the session

Meet Jorge in Classroom B.

### Check-Ins and Project Work Time (1:00 - 4:00)

Product Check-Ins with Jorge

* 1:00 - Marla, Lovisa, Dmitry
* 1:20 - Rick, Erik, Drew
* 1:40 - Jack, Adam, Dave
* 2:00 - Sebastian, Max, Alex
* 2:20 - Michael, Rob, Mitch
* 2:40 - Samson, David, Jason
* 3:00 - Tyler, Jai, Mike, Michael

Technical Check-Ins with Andrew

* 1:30 - Marla, Lovisa, Dmitry
* 1:50 - Rick, Erik, Drew
* 2:10 - Jack, Adam, Dave
* 2:30 - Sebastian, Max, Alex
* 2:50 - Michael, Rob, Mitch
* 3:10 - Samson, David, Jason
* 3:30 - Tyler, Jai, Mike, Michael


## 1507

### How the Web Works (9:00 - 11:00)

Meet Josh M in the Big Workspace.

### What is Rack? (11:00 - 12:00)

[Baby don't hurt me. Baby don't hurt me. No more.](https://www.youtube.com/watch?v=HEXWRTEbj1I)

Clone [RackLobster](https://github.com/turingschool-examples/rack-lobster)

### HTML/CSS Review (1:00 - 1:30)

Classroom B.

### CRUD in Sinatra Workshop (1:30 - 4:00)

[Lesson Plan](https://github.com/turingschool/lesson_plans/blob/master/ruby_02-web_applications_with_ruby/crud_sinatra.markdown)

[Repo](https://github.com/turingschool-examples/task-manager/tree/crud-lesson)


## 1508

### Echo - Finish Installation (8:30 - 9:00)

[This form](https://docs.google.com/forms/d/1KSt9ZFppCPeCfhaakI6nEkJ12lO6vknhnw2RWUJvwD8/viewform)
should be completed.

You should all be invited to the 1508-echo channel on Slack... if not, tell Josh.

Pull changes since yesterday:

```
$ cd ~/code/dotfiles
$ git pull

$ cd ../1508-echo
$ git pull
```

[Continue from yesterday](https://github.com/JoshCheek/1508/blob/ecb2775f16d239b4d43d7423161d8e7295751a59/initial-setup.md):

* Set up Atom
* Set up Seeing Is Believing
* Github public keys
* Exercism

BONUS: Theme your terminal (if we have time)


### Echo - Superfizz Recap (9:00 - 9:30)

Meet Josh in the front of Classroom A.

[https://github.com/turingschool/challenges/blob/master/super_fizz.markdown](https://github.com/turingschool/challenges/blob/master/super_fizz.markdown)

### Echo - String and Integer Riddles (9:30 - 10:30)

Continue with Josh in the front of Classroom A.

NOTE: If you don't know what strings / integers are, let me know.

Launch pry and see what methods exist on a string:

(if yours doesn't work: `$ gem install pry` and try again)

    [1] pry(main)> string = "hello"
    => "hello"

    [2] pry(main)> ls string
    Comparable#methods: <  <=  >  >=  between?
    String#methods:
      %            chr             gsub       rindex       succ!
      *            clear           gsub!      rjust        sum
    # ...

As you work your way through this, think about what names you might choose
to for the methods that do these jobs. Then see if those names are in the list.
If they are, try them out and see if they give you what you expect.

[https://github.com/turingschool/challenges/blob/master/string-and-integer-riddles.markdown](https://github.com/turingschool/challenges/blob/master/string-and-integer-riddles.markdown)

### Foxtrot - String and Integer Recap + Flow Control (9:00 - 10:30)

Let's meet at the Mega Table where we'll review last night's homework and discuss [how we control the "flow" of execution](https://github.com/turingschool/lesson_plans/blob/master/ruby_01-object_oriented_programming_with_ruby/flow_control.markdown).

### All - Problems Solutions and Algorithms (10:30 - 12:00)

Everyone should meet in Classroom A where we'll discuss [problems, solutions, and algorithms](https://github.com/turingschool/lesson_plans/blob/master/ruby_01-object_oriented_programming_with_ruby/problems_solutions_algorithms.markdown).

### All - Scavenger Hunt (1:00 - 4:00)

Find Andrew at 1:00 at the Mega Table, he is the Scavenger Hunt Czar this inning.

### Foxtrot: Homework

* Finish [the exercises from our Flow Control session](https://github.com/turingschool/lesson_plans/blob/master/ruby_01-object_oriented_programming_with_ruby/flow_control.markdown)
* Build [SuperFizz](https://github.com/turingschool/challenges/blob/master/super_fizz.markdown)
* Remember head shots tomorrow

### Echo: Homework

* Find a way to improve the environment before you leave today.
  Take a level of ownership as if this was your home, and empower yourself to make something better.
  Maybe you see someone struggling with something and you can offer help (opening a door,
  figuring out a challenge, installing their environment).
  Maybe you see something that is causing an issue for students generally (a full trash can,
  a furniture layout that is causing logistical issues, a cord that people are tripping over,
  an empty pot of coffee, an issue with the scavenger hunt implementation).
  Whatever it is, empower yourself to improve it, and do so.
  Make the environment better for others, and express appreciation as they make it better for you.
  Invest in your community.
* [Strings and Integers quiz](https://github.com/turingschool/challenges/blob/master/strings_and_integers_quiz.markdown)
* Headshots tomorrow
